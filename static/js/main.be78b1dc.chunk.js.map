{"version":3,"sources":["Home.tsx","PersonName.tsx","PersonRow.tsx","PeopleTable.tsx","PeoplePage.tsx","api.tsx","NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Home","PersonName","item","handlChangeUrl","key","slug","onClick","className","classNames","women","sex","men","name","PersonRow","people","match","useRouteMatch","history","useHistory","push","map","personActive","params","id","born","died","motherName","fatherName","PeopleTable","handlSordByName","location","useLocation","isActive","search","scope","PeoplePage","useState","setPeople","filteredPeople","setFilteredPeople","isLoading","setLoading","searchParams","URLSearchParams","quary","get","regExp","RegExp","isLoad","a","fetch","then","response","json","peopleFromServer","useEffect","role","type","value","onChange","event","set","target","toString","filterPeople","filter","test","placeholder","aria-label","aria-describedby","filtered","sort","b","localeCompare","length","NotFoundPage","App","to","exact","activeClassName","href","path","component","render","ReactDOM","document","getElementById"],"mappings":"kPAIeA,EAFF,kBAAM,qC,wDCmBJC,EAZqB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eAC3C,OACE,wBACEC,IAAKF,EAAKG,KACVC,QAAS,kBAAMH,EAAeD,EAAKG,OACnCE,UAAWC,IAAW,CAAEC,MAAoB,MAAbP,EAAKQ,KAAe,CAAEC,IAAkB,MAAbT,EAAKQ,OAE9DR,EAAKU,OC2BGC,EAjCoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE9BC,EAAaC,cACbC,EAAUC,cAEVf,EAAiB,SAACE,GACtBY,EAAQE,KAAR,kBAAwBd,KAG1B,OACE,oCACGS,EAAOM,KAAI,SAAClB,GAAD,OACV,wBAAIK,UAAWC,IAAW,CAAEa,aAAcnB,EAAKG,OAASU,EAAMO,OAAOC,MACnE,kBAAC,EAAD,CAAYrB,KAAMA,EAAMC,eAAgBA,IACxC,4BAAKD,EAAKQ,KACV,4BAAKR,EAAKsB,MACV,4BAAKtB,EAAKuB,MACV,wBACElB,UAAU,SAETL,EAAKwB,YAER,wBACEnB,UAAU,OAETL,EAAKyB,kBCsBHC,EA9CsB,SAAC,GAAiC,IAA/Bd,EAA8B,EAA9BA,OAAQe,EAAsB,EAAtBA,gBACxCC,EAAWC,cAEjB,OACE,oCACE,2BAAOxB,UAAU,0BACf,+BACE,4BACE,wBACEA,UAAWC,IAAW,CAAEwB,SAA8B,iBAApBF,EAASG,SAC3CC,MAAM,MACN5B,QAAS,kBAAMuB,EAAgB,UAHjC,QAOA,wBACEtB,UAAWC,IAAW,CAAEwB,SAA8B,gBAApBF,EAASG,SAC3CC,MAAM,MACN5B,QAAS,kBAAMuB,EAAgB,SAHjC,OAOA,wBACEtB,UAAWC,IAAW,CAAEwB,SAA8B,iBAApBF,EAASG,SAC3CC,MAAM,MACN5B,QAAS,kBAAMuB,EAAgB,UAHjC,QAOA,wBACEtB,UAAWC,IAAW,CAAEwB,SAA8B,iBAApBF,EAASG,SAC3CC,MAAM,MACN5B,QAAS,kBAAMuB,EAAgB,UAHjC,QAOA,wBAAIK,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,YAGJ,kBAAC,EAAD,CAAWpB,OAAQA,OC8CZqB,EA1FI,WAAO,IAAD,EACKC,mBAAS,IADd,mBAChBtB,EADgB,KACRuB,EADQ,OAEqBD,mBAAS,IAF9B,mBAEhBE,EAFgB,KAEAC,EAFA,OAGSH,oBAAS,GAHlB,mBAGhBI,EAHgB,KAGLC,EAHK,KAIjBxB,EAAUC,cACVY,EAAWC,cACXW,EAAe,IAAIC,gBAAgBb,EAASG,QAC5CW,EAAQF,EAAaG,IAAI,UAAY,GACrCC,EAAS,IAAIC,OAAOH,EAAO,KAE3BI,EAAM,uCAAG,4BAAAC,EAAA,sECdRC,MAHS,qEAIbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDad,OACPC,EADO,OAGbjB,EAAUiB,GACVb,GAAW,GAJE,2CAAH,qDAOZc,qBAAU,WACRP,MACC,IAqCH,OACE,oCACE,0CACCR,EAEG,yBAAKjC,UAAU,eACb,yBAAKA,UAAU,iBAAiBiD,KAAK,UACnC,0BAAMjD,UAAU,WAAhB,gBAKJ,oCACE,yBAAKA,UAAU,2BACb,2BACEkD,KAAK,OACLlD,UAAU,eACVmD,MAAOd,EACPe,SArDM,SAACC,GACnBlB,EAAamB,IAAI,QAASD,EAAME,OAAOJ,OACvCzC,EAAQE,KAAK,CACXc,OAAQS,EAAaqB,aAGvB,IAAMC,EAAe,YAAIlD,GACtBmD,QAAO,SAAC/D,GAAD,OAAkB4C,EAAOoB,KAAKhE,EAAKU,KAAOV,EAAKyB,WAAazB,EAAKwB,eAE3Ea,EAAkByB,IA6CNG,YAAY,WACZC,aAAW,WACXC,mBAAiB,oBAGrB,kBAAC,EAAD,CACExC,gBAhDY,SAACjB,GACvBK,EAAQE,KAAR,0BAAgCP,IAChC,IAAI0D,EAAgB,GAEP,SAAT1D,IACF0D,EAAW,YAAIxD,GAAQyD,MAAK,SAACtB,EAAWuB,GAAZ,OAA0BvB,EAAErC,KAAK6D,cAAcD,EAAE5D,UAGlE,QAATA,IACF0D,EAAW,YAAIxD,GAAQyD,MAAK,SAACtB,EAAWuB,GAAZ,OAA+BvB,EAAEvC,IAAI+D,cAAcD,EAAE9D,SAGtE,SAATE,IACF0D,EAAW,YAAIxD,GAAQyD,MAAK,SAACtB,EAAWuB,GAAZ,OAA0BvB,EAAEzB,KAAOgD,EAAEhD,SAGtD,SAATZ,IACF0D,EAAW,YAAIxD,GAAQyD,MAAK,SAACtB,EAAWuB,GAAZ,OAA0BvB,EAAExB,KAAO+C,EAAE/C,SAGnEc,EAAkB+B,IA6BRxD,OAAQwB,EAAeoC,QAAU,EAAIpC,EAAiBxB,OErFrD6D,EAFM,kBAAM,6CCiCZC,G,MA3BH,WACV,OACE,oCACE,wBAAIrE,UAAU,iBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASsE,GAAG,IAAIC,OAAK,EAACvE,UAAU,YAAYwE,gBAAgB,SAASC,KAAK,KAA1E,SAEF,wBAAIzE,UAAU,YACZ,kBAAC,IAAD,CAASsE,GAAG,UAAUtE,UAAU,YAAYwE,gBAAgB,SAASC,KAAK,KAA1E,gBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIH,OAAK,EAACI,UAAWlF,IACjC,kBAAC,IAAD,CAAOiF,KAAK,QAAQC,UAAWlF,IAC/B,kBAAC,IAAD,CACEiF,KAAK,eACLE,OAAQ,kBACN,kBAAC,EAAD,SAGJ,kBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAWP,QCvBnCS,IAASD,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFE,SAASC,eAAe,W","file":"static/js/main.be78b1dc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => <h1>Home</h1>;\n\nexport default Home;\n","import React, { } from 'react';\nimport classNames from 'classnames';\nimport { People } from './interface';\n\ntype Props = {\n  item: People;\n  handlChangeUrl: Function;\n};\n\nconst PersonName: React.FC<Props> = ({ item, handlChangeUrl }) => {\n  return (\n    <th\n      key={item.slug}\n      onClick={() => handlChangeUrl(item.slug)}\n      className={classNames({ women: item.sex === 'f' }, { men: item.sex === 'm' })}\n    >\n      {item.name}\n    </th>\n  );\n};\n\nexport default PersonName;\n","import React, { } from 'react';\nimport { useRouteMatch, useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { People } from './interface';\nimport PersonName from './PersonName';\n\ntype Props = {\n  people: People[];\n};\n\nconst PersonRow: React.FC<Props> = ({ people }) => {\n  // console.log(people);\n  const match: any = useRouteMatch();\n  const history = useHistory();\n\n  const handlChangeUrl = (slug: any) => {\n    history.push(`/people/${slug}`);\n  };\n\n  return (\n    <>\n      {people.map((item) => (\n        <tr className={classNames({ personActive: item.slug === match.params.id })}>\n          <PersonName item={item} handlChangeUrl={handlChangeUrl} />\n          <td>{item.sex}</td>\n          <td>{item.born}</td>\n          <td>{item.died}</td>\n          <td\n            className=\"women\"\n          >\n            {item.motherName}\n          </td>\n          <td\n            className=\"men\"\n          >\n            {item.fatherName}\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n\nexport default PersonRow;\n","import React, { } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { People } from './interface';\nimport PersonRow from './PersonRow';\n\ntype Props = {\n  people: People[];\n  handlSordByName: Function;\n};\n\nconst PeopleTable: React.FC<Props> = ({ people, handlSordByName }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <table className=\"table table-borderless\">\n        <thead>\n          <tr>\n            <th\n              className={classNames({ isActive: location.search === '?sortBy=name' })}\n              scope=\"col\"\n              onClick={() => handlSordByName('name')}\n            >\nname\n            </th>\n            <th\n              className={classNames({ isActive: location.search === '?sortBy=sex' })}\n              scope=\"col\"\n              onClick={() => handlSordByName('sex')}\n            >\nsex\n            </th>\n            <th\n              className={classNames({ isActive: location.search === '?sortBy=born' })}\n              scope=\"col\"\n              onClick={() => handlSordByName('born')}\n            >\nborn\n            </th>\n            <th\n              className={classNames({ isActive: location.search === '?sortBy=died' })}\n              scope=\"col\"\n              onClick={() => handlSordByName('died')}\n            >\ndied\n            </th>\n            <th scope=\"col\">mother</th>\n            <th scope=\"col\">father</th>\n          </tr>\n        </thead>\n        <PersonRow people={people} />\n      </table>\n    </>\n  );\n};\n\nexport default PeopleTable;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getPeople } from './api';\nimport { People } from './interface';\nimport PeopleTable from './PeopleTable';\n\n\nconst PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n  const [filteredPeople, setFilteredPeople] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const quary = searchParams.get('query') || '';\n  const regExp = new RegExp(quary, 'i');\n\n  const isLoad = async () => {\n    const peopleFromServer = await getPeople();\n\n    setPeople(peopleFromServer);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    isLoad();\n  }, []);\n\n  const handlfilter = (event: any) => {\n    searchParams.set('query', event.target.value);\n    history.push({\n      search: searchParams.toString(),\n    });\n\n    const filterPeople = [...people]\n      .filter((item: People) => regExp.test(item.name + item.fatherName + item.motherName));\n\n    setFilteredPeople(filterPeople);\n  };\n\n  const handlSordByName = (name: string) => {\n    history.push(`/people/?sortBy=${name}`);\n    let filtered: any = [];\n\n    if (name === 'name') {\n      filtered = [...people].sort((a: People, b: People) => a.name.localeCompare(b.name));\n    }\n\n    if (name === 'sex') {\n      filtered = [...people].sort((a: People, b: People): any => a.sex.localeCompare(b.sex));\n    }\n\n    if (name === 'born') {\n      filtered = [...people].sort((a: People, b: People) => a.born - b.born);\n    }\n\n    if (name === 'died') {\n      filtered = [...people].sort((a: People, b: People) => a.died - b.died);\n    }\n\n    setFilteredPeople(filtered);\n  };\n\n  return (\n    <>\n      <h1>PeoplePage</h1>\n      {isLoading\n        ? (\n          <div className=\"text-center\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        )\n        : (\n          <>\n            <div className=\"input-group flex-nowrap\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={quary}\n                onChange={handlfilter}\n                placeholder=\"Username\"\n                aria-label=\"Username\"\n                aria-describedby=\"addon-wrapping\"\n              />\n            </div>\n            <PeopleTable\n              handlSordByName={handlSordByName}\n              people={filteredPeople.length >= 1 ? filteredPeople : people}\n            />\n          </>\n        )}\n    </>\n  );\n};\n\nexport default PeoplePage;\n","const UrlPeople = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = (): Promise<any> => {\n  return fetch(UrlPeople)\n    .then(response => response.json());\n};\n","import React from 'react';\n\nconst NotFoundPage = () => <h1>NotFoundPage</h1>;\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport Home from './Home';\nimport PeoplePage from './PeoplePage';\nimport NotFoundPage from './NotFoundPage';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <>\n      <ul className=\"nav nav-pills\">\n        <li className=\"nav-item\">\n          <NavLink to=\"/\" exact className=\"nav-link \" activeClassName=\"active\" href=\"#\">Home</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink to=\"/people\" className=\"nav-link \" activeClassName=\"active\" href=\"#\">PeoplePage</NavLink>\n        </li>\n      </ul>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/home\" component={Home} />\n        <Route\n          path=\"/people/:id?\"\n          render={() => (\n            <PeoplePage />\n          )}\n        />\n        <Route path=\"/\" component={NotFoundPage} />\n      </Switch>\n    </>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}