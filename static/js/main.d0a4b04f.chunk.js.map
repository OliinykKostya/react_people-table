{"version":3,"sources":["Home.tsx","PersonRow.tsx","PeopleTable.tsx","PeoplePage.tsx","api.tsx","NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Home","PersonRow","people","match","useRouteMatch","history","useHistory","map","item","className","classNames","personActive","slug","params","id","key","onClick","push","women","sex","men","name","born","died","motherName","fatherName","paramOfPeople","PeopleTable","PeoplePage","useState","setPeople","filteredPeople","setFilteredPeople","location","useLocation","searchParams","URLSearchParams","search","quary","get","regExp","RegExp","isLoad","a","fetch","then","response","json","peopleFromServer","useEffect","type","value","onChange","event","set","target","toString","filterPeople","filter","test","length","NotFoundPage","App","to","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"kPAIeA,EAFF,kBAAM,qC,0DC6CJC,EAtCoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC9BC,EAAaC,cACbC,EAAUC,cAMhB,OACE,oCACGJ,EAAOK,KAAI,SAACC,GAAD,OACV,wBAAIC,UAAWC,IAAW,CAAEC,aAAcH,EAAKI,OAAST,EAAMU,OAAOC,MACnE,wBACEC,IAAKP,EAAKI,KACVI,QAAS,kBAVKJ,EAUgBJ,EAAKI,UAT3CP,EAAQY,KAAR,kBAAwBL,IADH,IAACA,GAWdH,UAAWC,IAAW,CAAEQ,MAAoB,MAAbV,EAAKW,KAAe,CAAEC,IAAkB,MAAbZ,EAAKW,OAE9DX,EAAKa,MAER,4BAAKb,EAAKW,KACV,4BAAKX,EAAKc,MACV,4BAAKd,EAAKe,MACV,wBACEd,UAAU,SAETD,EAAKgB,YAER,wBACEf,UAAU,OAETD,EAAKiB,kBC/BZC,EAAgB,CAAC,OAAQ,MAAO,OAAQ,OAAQ,SAAU,UAgBjDC,EAbsB,SAAC,GAAgB,IAAdzB,EAAa,EAAbA,OACtC,OACE,oCACE,2BAAOO,UAAU,eACf,4BACGiB,EAAcnB,KAAI,SAAAC,GAAI,OAAI,4BAAKA,OAElC,kBAAC,EAAD,CAAWN,OAAQA,OCoCZ0B,EA/CI,WAAO,IAAD,EACKC,mBAAS,IADd,mBAChB3B,EADgB,KACR4B,EADQ,OAEqBD,mBAAS,IAF9B,mBAEhBE,EAFgB,KAEAC,EAFA,KAGjB3B,EAAUC,cACV2B,EAAWC,cACXC,EAAe,IAAIC,gBAAgBH,EAASI,QAC5CC,EAAQH,EAAaI,IAAI,UAAY,GACrCC,EAAS,IAAIC,OAAOH,EAAO,KAE3BI,EAAM,uCAAG,4BAAAC,EAAA,sECbRC,MAHS,qEAIbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDYd,OACPC,EADO,OAGblB,EAAUkB,GAHG,2CAAH,qDAMZC,qBAAU,WACRP,MACC,IAcH,OACE,oCACE,0CACA,2BACEQ,KAAK,OACLC,MAAOb,EACPc,SAlBc,SAACC,GACnBlB,EAAamB,IAAI,QAASD,EAAME,OAAOJ,OACvC9C,EAAQY,KAAK,CACXoB,OAAQF,EAAaqB,aAGvB,IAAMC,EAAe,YAAIvD,GACtBwD,QAAO,SAAClD,GAAD,OAAkBgC,EAAOmB,KAAKnD,EAAKa,KAAOb,EAAKiB,WAAajB,EAAKgB,eAE3EQ,EAAkByB,MAWf1B,EAAe6B,QAAU,EACtB,kBAAC,EAAD,CAAa1D,OAAQ6B,IACrB,kBAAC,EAAD,CAAa7B,OAAQA,ME5ChB2D,EAFM,kBAAM,6CCoCZC,G,MA5BH,WACV,OACE,oCACE,yBAAKrD,UAAU,OACb,6CAEA,6BACE,4BACE,4BAAI,kBAAC,IAAD,CAASsD,GAAG,IAAIC,OAAK,GAArB,SACJ,4BAAI,kBAAC,IAAD,CAASD,GAAG,WAAZ,iBAGR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,IAAID,OAAK,EAACE,UAAWlE,IACjC,kBAAC,IAAD,CAAOiE,KAAK,QAAQC,UAAWlE,IAC/B,kBAAC,IAAD,CACEiE,KAAK,eACLE,OAAQ,kBACN,kBAAC,EAAD,SAGJ,kBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAWL,QC1BrCO,IAASD,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFE,SAASC,eAAe,W","file":"static/js/main.d0a4b04f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => <h1>Home</h1>;\n\nexport default Home;\n","import React, { } from 'react';\nimport { useRouteMatch, useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { People } from './interface';\n\ntype Props = {\n  people: People[];\n};\n\nconst PersonRow: React.FC<Props> = ({ people }) => {\n  const match: any = useRouteMatch();\n  const history = useHistory();\n\n  const handlChangeUrl = (slug: any) => {\n    history.push(`/people/${slug}`);\n  };\n\n  return (\n    <>\n      {people.map((item) => (\n        <tr className={classNames({ personActive: item.slug === match.params.id })}>\n          <th\n            key={item.slug}\n            onClick={() => handlChangeUrl(item.slug)}\n            className={classNames({ women: item.sex === 'f' }, { men: item.sex === 'm' })}\n          >\n            {item.name}\n          </th>\n          <td>{item.sex}</td>\n          <td>{item.born}</td>\n          <td>{item.died}</td>\n          <td\n            className=\"women\"\n          >\n            {item.motherName}\n          </td>\n          <th\n            className=\"men\"\n          >\n            {item.fatherName}\n          </th>\n        </tr>\n      ))}\n    </>\n  );\n};\n\nexport default PersonRow;\n","import React from 'react';\nimport { People } from './interface';\nimport PersonRow from './PersonRow';\n\ntype Props = {\n  people: People[];\n};\n\nconst paramOfPeople = ['name', 'sex', 'born', 'died', 'mother', 'father'];\n\n\nconst PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <>\n      <table className=\"PeopleTable\">\n        <tr>\n          {paramOfPeople.map(item => <th>{item}</th>)}\n        </tr>\n        <PersonRow people={people} />\n      </table>\n    </>\n  );\n};\n\nexport default PeopleTable;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getPeople } from './api';\nimport { People } from './interface';\nimport PeopleTable from './PeopleTable';\n\n\nconst PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n  const [filteredPeople, setFilteredPeople] = useState([]);\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const quary = searchParams.get('query') || '';\n  const regExp = new RegExp(quary, 'i');\n\n  const isLoad = async () => {\n    const peopleFromServer = await getPeople();\n\n    setPeople(peopleFromServer);\n  };\n\n  useEffect(() => {\n    isLoad();\n  }, []);\n\n  const handlfilter = (event: any) => {\n    searchParams.set('query', event.target.value);\n    history.push({\n      search: searchParams.toString(),\n    });\n\n    const filterPeople = [...people]\n      .filter((item: People) => regExp.test(item.name + item.fatherName + item.motherName));\n\n    setFilteredPeople(filterPeople);\n  };\n\n  return (\n    <>\n      <h1>PeoplePage</h1>\n      <input\n        type=\"text\"\n        value={quary}\n        onChange={handlfilter}\n      />\n      {filteredPeople.length >= 1\n        ? <PeopleTable people={filteredPeople} />\n        : <PeopleTable people={people} />}\n\n    </>\n  );\n};\n\nexport default PeoplePage;\n","const UrlPeople = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = (): Promise<any> => {\n  return fetch(UrlPeople)\n    .then(response => response.json());\n};\n","import React from 'react';\n\nconst NotFoundPage = () => <h1>NotFoundPage</h1>;\n\nexport default NotFoundPage;\n","import React from 'react';\nimport {\n  Switch, Route, NavLink,\n} from 'react-router-dom';\nimport Home from './Home';\nimport PeoplePage from './PeoplePage';\nimport NotFoundPage from './NotFoundPage';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <>\n      <div className=\"App\">\n        <h1>People table</h1>\n      </div>\n        <nav>\n          <ul>\n            <li><NavLink to=\"/\" exact>Home</NavLink></li>\n            <li><NavLink to=\"/people\">PeoplePage</NavLink></li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/home\" component={Home} />\n          <Route\n            path=\"/people/:id?\"\n            render={() => (\n              <PeoplePage />\n            )}\n          />\n          <Route path=\"/\" component={NotFoundPage} />\n        </Switch>\n    </>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}